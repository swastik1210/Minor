// traffic light system 
// initial state RED then GREEN and finally YELLOW 
// after the final state it reverts to its initial state
// RED =S0, YELLOW=S1, GREEN=S2
// where S0,S1 and S2 represent three states
// the three states are distinguished by :-
// RED = 100
// GREEN = 010
// YELLOW = 001

// module description

module traffic_light (clock, light);
  input clock;
  output reg [2:0]light;
  parameter S0=0, S1=1, S2=2;
  parameter RED=3'b100, GREEN=3'b010, YELLOW=3'b001;
  reg [1:0]state;
  always @(posedge clock)
    case(state)
      S0: begin
        
        light <= GREEN;
        state <= S1;
      end
      S1: begin
        
        light <= YELLOW;
        state <= S2;
      end
      S2: begin
        
        light <= RED;
        state <= S0;
      end
      default: 
        begin
          
          light <= RED;
          state <= S0;
        end
    endcase
endmodule
        
// testbench

module tbtl;
  wire[2:0]light;
  reg clk;
  traffic_light DUT (clk, light);
  always #5 clk= ~clk;
  initial clk=1'b0;
    initial 
    begin
      $dumpfile("design.vcd");
      $dumpvars(0,tbtl);
      $monitor($time, " light =%b ",light);
      #100 $finish;
    end
endmodule
 
